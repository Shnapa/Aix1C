console.log("script.js –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ");

async function analyzeUnit() {
  console.log("üîÅ analyzeUnit –≤–∏–∫–ª–∏–∫–∞–Ω–∞");

  const code = document.getElementById("codeInput").value.trim();
  const resultDiv = document.getElementById("result");

  if (!code) {
    resultDiv.textContent = "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –æ–¥–∏–Ω–∏—Ü—ñ";
    return;
  }

  resultDiv.textContent = "–û–±—Ä–æ–±–∫–∞‚Ä¶";

  try {
    console.log("–í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∫–æ–¥:", code);

    const response = await fetch("/analyze", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ code }),
    });

    console.log("–û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:", response);

    const data = await response.json();
    console.log("JSON —Ä–µ–∑—É–ª—å—Ç–∞—Ç:", data);

    if (data.result) {
      resultDiv.textContent = data.result;
    } else if (data.error) {
      resultDiv.textContent = `–ü–æ–º–∏–ª–∫–∞: ${data.error}`;
    } else {
      resultDiv.textContent = "–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞";
    }
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ:", err);
    resultDiv.textContent = "–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî";
  }
}
